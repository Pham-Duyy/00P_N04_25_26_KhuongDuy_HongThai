package test;

import java.util.ArrayList;
import java.util.Scanner;
import model.UserList;

public class testUserList {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        ArrayList<UserList> users = new ArrayList<>();

        int choice;
        do {
            System.out.println("\n===== MENU QU·∫¢N L√ù USER =====");
            System.out.println("1. Th√™m User");
            System.out.println("2. Hi·ªÉn th·ªã danh s√°ch User");
            System.out.println("3. C·∫≠p nh·∫≠t User theo username");
            System.out.println("4. X√≥a User theo username");
            System.out.println("5. T√¨m ki·∫øm User theo username");
            System.out.println("0. Tho√°t");
            System.out.print("Ch·ªçn: ");
            choice = Integer.parseInt(sc.nextLine());

            switch (choice) {
                case 1:
                    System.out.print("Nh·∫≠p username: ");
                    String username = sc.nextLine();
                    System.out.print("Nh·∫≠p email: ");
                    String email = sc.nextLine();
                    System.out.print("Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i: ");
                    String phone = sc.nextLine();
                    users.add(new UserList(username, email, phone));
                    System.out.println("‚úÖ Th√™m user th√†nh c√¥ng!");
                    break;

                case 2:
                    if (users.isEmpty()) {
                        System.out.println("Danh s√°ch r·ªóng!");
                    } else {
                        System.out.println("\n--- DANH S√ÅCH USER ---");
                        for (UserList u : users) {
                            u.displayInfo();
                            System.out.println("-------------------");
                        }
                    }
                    break;

                case 3:
                    System.out.print("Nh·∫≠p username c·∫ßn c·∫≠p nh·∫≠t: ");
                    String updateName = sc.nextLine();
                    boolean foundUpdate = false;
                    for (UserList u : users) {
                        if (u.getUsername().equals(updateName)) {
                            System.out.print("Nh·∫≠p username m·ªõi: ");
                            u.setUsername(sc.nextLine());
                            System.out.print("Nh·∫≠p email m·ªõi: ");
                            u.setEmail(sc.nextLine());
                            System.out.print("Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i m·ªõi: ");
                            u.setPhone(sc.nextLine());
                            System.out.println("‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng!");
                            foundUpdate = true;
                            break;
                        }
                    }
                    if (!foundUpdate) {
                        System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y user!");
                    }
                    break;

                case 4:
                    System.out.print("Nh·∫≠p username c·∫ßn x√≥a: ");
                    String deleteName = sc.nextLine();
                    boolean removed = users.removeIf(u -> u.getUsername().equals(deleteName));
                    if (removed) {
                        System.out.println("‚úÖ ƒê√£ x√≥a user!");
                    } else {
                        System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y user!");
                    }
                    break;

                case 5:
                    System.out.print("Nh·∫≠p username c·∫ßn t√¨m: ");
                    String searchName = sc.nextLine();
                    boolean foundSearch = false;
                    for (UserList u : users) {
                        if (u.getUsername().equals(searchName)) {
                            System.out.println("üîç Th√¥ng tin user t√¨m th·∫•y:");
                            u.displayInfo();
                            foundSearch = true;
                            break;
                        }
                    }
                    if (!foundSearch) {
                        System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y user!");
                    }
                    break;

                case 0:
                    System.out.println("Tho√°t ch∆∞∆°ng tr√¨nh!");
                    break;

                default:
                    System.out.println("‚ö†Ô∏è L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!");
            }

        } while (choice != 0);

        sc.close();
    }
}